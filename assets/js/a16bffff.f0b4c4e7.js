"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[977],{9849:e=>{e.exports=JSON.parse('{"functions":[{"name":"InBounds","desc":"\\t\\nDetermines whether the provided position is within the Zone\'s bounding box","params":[{"name":"Ref","desc":"","lua_type":"BasePart | Model"},{"name":"Position","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","ignore":true,"source":{"line":92,"path":"src/init.luau"}},{"name":"Register","desc":"Creates a \'ZoneInfo\' object and pushes the object to the cache aka ZoneManager.Zones.\\nThis method is called automatically for zones registered using the [CollectionService](https://create.roblox.com/docs/reference/engine/classes/CollectionService) tag \'Zone\'","params":[{"name":"ZoneRef","desc":"","lua_type":"ZoneRef"}],"returns":[],"function_type":"method","source":{"line":186,"path":"src/init.luau"}},{"name":"Deregister","desc":"Removes the provided ZoneRef from the cache and also cleans the ZoneInfo object","params":[{"name":"ZoneRef","desc":"","lua_type":"ZoneRef"}],"returns":[],"function_type":"method","source":{"line":231,"path":"src/init.luau"}},{"name":"GetZoneFromPlayer","desc":"Attempts to get the zone the player is currently in","params":[{"name":"Player","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"ZoneInfo?"}],"function_type":"method","source":{"line":263,"path":"src/init.luau"}}],"properties":[{"name":"CheckRate","desc":"The rate in which zones are checked","lua_type":"number","source":{"line":126,"path":"src/init.luau"}},{"name":"Zones","desc":"Table of all currently active zones","lua_type":"{[ZoneRef]: ZoneInfo}","source":{"line":136,"path":"src/init.luau"}},{"name":"OnEntered","desc":"Fires when a player enters a zone\\n\\nExample:\\n```lua\\nZoneManager.OnEntered:Connect(function(Player: Player, Zone: ZoneInfo)\\n\\tif Zone.Name == \\"ForbiddenZone\\" then\\n\\t\\tPlayer:Kick(\\"You entered the forbidden zone \ud83e\udd2f\\")\\n\\tend\\nend)\\n```","lua_type":"Signal<(Player, ZoneInfo)>","source":{"line":155,"path":"src/init.luau"}},{"name":"OnEntered","desc":"Fires when a player exits a zone\\n\\nExample:\\n```lua\\nZoneManager.OnExited:Connect(function(Player: Player, Zone: ZoneInfo)\\n\\tif Zone.Name == \\"SafeZone\\" then\\n\\t\\tPlayer:SetAttribute(\\"Safe\\", false)\\n\\tend\\nend)\\n```","lua_type":"Signal<(Player, ZoneInfo)>","source":{"line":174,"path":"src/init.luau"}}],"types":[{"name":"ZoneRef","desc":"","lua_type":"BasePart | Model","source":{"line":46,"path":"src/init.luau"}},{"name":"ZoneInfo","desc":"","fields":[{"name":"Active","lua_type":"boolean,","desc":""},{"name":"Name","lua_type":"string,","desc":""},{"name":"Ref","lua_type":"ZoneRef,","desc":""},{"name":"Occupants","lua_type":"{ Player }","desc":""}],"source":{"line":59,"path":"src/init.luau"}}],"name":"ZoneManager","desc":"","source":{"line":116,"path":"src/init.luau"}}')}}]);